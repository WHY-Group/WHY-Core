<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>io.github.why-group</groupId>
    <artifactId>WHY-Core</artifactId>
    <version>1.0.1-RELEASE</version>
    <name>WHY-Core</name>
    <description>WHY kernel module</description>
    <properties>
        <java.version>1.8</java.version>
        <commons-io.version>2.5</commons-io.version>
        <mybatis-plus.version>3.4.2</mybatis-plus.version>
        <fastjson.version>1.2.73</fastjson.version>
        <druid.version>1.1.10</druid.version>
        <hibernate-validator.version>6.0.21.Final</hibernate-validator.version>
        <swagger2.version>3.0.0</swagger2.version>
        <kaptcha.version>2.3.2</kaptcha.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>
    <dependencies>
        <!-- Spring web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--redis-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- apache 常用工具包 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!--io常用工具类 -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <!-- swagger2 -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger2.version}</version>
        </dependency>
        <!-- swagger-ui -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger2.version}</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!--mybatis-plus-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-core</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>
        <!-- 校验框架 -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <!-- hibernate-validator 校验框架 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>
        <!-- fast json -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>
<!--        &lt;!&ndash; 验证码 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.github.penggle</groupId>-->
<!--            <artifactId>kaptcha</artifactId>-->
<!--            <version>${kaptcha.version}</version>-->
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <artifactId>javax.servlet-api</artifactId>-->
<!--                    <groupId>javax.servlet</groupId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
<!--        </dependency>-->


        <!--        &lt;!&ndash;代码自动生成&ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <groupId>com.baomidou</groupId>-->
        <!--            <artifactId>mybatis-plus-generator</artifactId>-->
        <!--            <version>3.0.3</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.velocity</groupId>-->
        <!--            <artifactId>velocity-engine-core</artifactId>-->
        <!--            <version>2.3</version>-->
        <!--        </dependency>-->
    </dependencies>

        <!-- 许可证信息 -->
        <licenses>
            <!-- Apache许可证 -->
            <license>
                <name>The Apache Software License, Version 2.0</name>
                <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            </license>
            <!-- MIT许可证 -->
            <!--	<license>
                    <name>MIT License</name>
                    <url>http://www.opensource.org/licenses/mit-license.php</url>
                </license>-->
        </licenses>
        <!-- SCM信息 -> git在github上托管 -->
        <scm>
            <connection>scm:git:git://github.com/WHY-Group/WHY-Core.git</connection>
            <developerConnection>scm:git:ssh://github.com/WHY-Group/WHY-Core.git</developerConnection>
            <url>https://github.com/WHY-Group/WHY-Core</url>
        </scm>
        <!-- 开发者信息 -->
        <developers>
            <developer>
                <name>wuchenglin</name>
                <email>mujinlin_lin@163.com</email>
                <url>https://github.com/mujin-lin</url>
            </developer>
            <developer>
                <name>hubin</name>
                <email>945040070@qq.com.com</email>
                <url>https://github.com/LakeIce</url>
            </developer>
        </developers>

        <!-- 使用个人资料：由于生成javadoc和源jar以及使用GPG签署组件是一个相当耗时的过程，因此这些执行通常与正常的构建配置隔离并移动到配置文件中。然后，在通过激活配置文件执行部署时，将使用此配置文件。 -->
        <profiles>
            <profile>
                <id>whyCore</id>
                <activation>
                    <activeByDefault>true</activeByDefault>
                </activation>
                <build>
                    <plugins>
                        <plugin>
                            <groupId>org.sonatype.plugins</groupId>
                            <artifactId>nexus-staging-maven-plugin</artifactId>
                            <version>1.5.1</version>
                            <executions>
                                <execution>
                                    <id>default-deploy</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>deploy</goal>
                                    </goals>
                                </execution>
                            </executions>
                            <configuration>
                                <serverId>whyCore</serverId>
                                <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                                <skipStaging>false</skipStaging>
                            </configuration>
                        </plugin>

                        <!-- 要生成Javadoc和Source jar文件，您必须配置javadoc和源Maven插件 -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-source-plugin</artifactId>
                            <version>2.2.1</version>
                            <executions>
                                <execution>
                                    <id>attach-sources</id>
                                    <goals>
                                        <goal>jar-no-fork</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>2.9.1</version>
                            <executions>
                                <execution>
                                    <id>attach-javadocs</id>
                                    <goals>
                                        <goal>jar</goal>
                                    </goals>
                                    <configuration> <!-- add this to disable checking -->
                                        <additionalparam>-Xdoclint:none</additionalparam>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <!--  必须配置GPG插件用于使用以下配置对组件进行签名 -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-gpg-plugin</artifactId>
                            <version>1.5</version>
                            <executions>
                                <execution>
                                    <id>sign-artifacts</id>
                                    <phase>verify</phase>
                                    <goals>
                                        <goal>sign</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </build>
                <!-- 【注】snapshotRepository 与 repository 中的 id 一定要与 setting.xml 中 server 的 id 保持一致！ -->
                <distributionManagement>
                    <snapshotRepository>
                        <id>whyCore</id>
                        <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
                    </snapshotRepository>
                    <repository>
                        <id>whyCore</id>
                        <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                    </repository>
                </distributionManagement>
            </profile>
        </profiles>

<!--    </project>-->


    <!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <fork>true</fork>-->
<!--                    <includeSystemScope>true</includeSystemScope>-->
<!--                </configuration>-->
<!--                <version>2.2.4.RELEASE</version>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->
<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <artifactId>maven-compiler-plugin</artifactId>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

</project>
